// <auto-generated />
using System;
using HorseRace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HorseRace.Migrations
{
    [DbContext(typeof(HorseRaceContext))]
    [Migration("20250526175632_RemoveOldFields")]
    partial class RemoveOldFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HorseRace.Models.Kon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxSzybkosc")
                        .HasColumnType("int");

                    b.Property<int>("MaxWytrzymalosc")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Umaszczenie")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kon", (string)null);
                });

            modelBuilder.Entity("HorseRace.Models.Uzytkownik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CzyAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataDolaczenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Haslo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uzytkownik", (string)null);
                });

            modelBuilder.Entity("HorseRace.Models.Wyscig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CzyZrealizowany")
                        .HasColumnType("bit");

                    b.Property<int>("Koszt")
                        .HasColumnType("int");

                    b.Property<int>("Nagroda")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PoziomTrudnosci")
                        .HasColumnType("int");

                    b.Property<int>("WlascicielId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WlascicielId");

                    b.ToTable("Wyscig", (string)null);
                });

            modelBuilder.Entity("KonWyscig", b =>
                {
                    b.Property<int>("KonieId")
                        .HasColumnType("int");

                    b.Property<int>("WyscigiId")
                        .HasColumnType("int");

                    b.HasKey("KonieId", "WyscigiId");

                    b.HasIndex("WyscigiId");

                    b.ToTable("KonWyscig");
                });

            modelBuilder.Entity("HorseRace.Models.Wyscig", b =>
                {
                    b.HasOne("HorseRace.Models.Uzytkownik", "Wlasciciel")
                        .WithMany("Wyscigi")
                        .HasForeignKey("WlascicielId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wlasciciel");
                });

            modelBuilder.Entity("KonWyscig", b =>
                {
                    b.HasOne("HorseRace.Models.Kon", null)
                        .WithMany()
                        .HasForeignKey("KonieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HorseRace.Models.Wyscig", null)
                        .WithMany()
                        .HasForeignKey("WyscigiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HorseRace.Models.Uzytkownik", b =>
                {
                    b.Navigation("Wyscigi");
                });
#pragma warning restore 612, 618
        }
    }
}
